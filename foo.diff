diff --git a/classes/automodeler.php b/classes/automodeler.php
index 11df1c4..4764243 100644
--- a/classes/automodeler.php
+++ b/classes/automodeler.php
@@ -7,7 +7,7 @@
 * @copyright      (c) 2010 Jeremy Bush
 * @license        http://www.opensource.org/licenses/isc-license.txt
 */
-class AutoModeler extends Model implements ArrayAccess
+class AutoModeler extends Model implements ArrayAccess, Iterator
 {
        // The database table name
        protected $_table_name = '';
@@ -98,6 +98,18 @@ class AutoModeler extends Model implements ArrayAccess
        }
 
        /**
+        * Magic isset method to test _data
+        *
+        * @param string $name the property to test
+        *
+        * @return bool
+        */
+       public function __isset($name)
+       {
+               return isset($this->_data[$name]);
+       }
+
+       /**
         * Gets an array version of the model
         *
         * @return array
@@ -155,7 +167,7 @@ class AutoModeler extends Model implements ArrayAccess
         *
         * @return mixed
         */
-       public function valid($validation = NULL)
+       public function is_valid($validation = NULL)
        {
                $data = $validation instanceof Validate ? $validation->copy($validation->as_array()+$this->_data) : Validat
 
@@ -244,10 +256,15 @@ class AutoModeler extends Model implements ArrayAccess
         *
         * @return Database_Result
         */
-       public function fetch_where($where = array(), $order_by = 'id', $direction = 'ASC', $type = 'and')
+       public function fetch_where($wheres = array(), $order_by = 'id', $direction = 'ASC', $type = 'and')
        {
                $function = $type.'_where';
-               return db::select('*')->from($this->_table_name)->$function($where)->order_by($order_by, $direction)->as_ob
+               $query = db::select('*')->order_by($order_by, $direction)->as_object('Model_'.inflector::singular(ucwords($
+
+               foreach ($wheres as $where)
+                       $query->$function($where[0], $where[1], $where[2]);
+
+               return $query->execute($this->_db);
        }
 
        /**
@@ -316,6 +333,32 @@ class AutoModeler extends Model implements ArrayAccess
        {
                $this->_data[$key] = NULL;
        }
+
+       // Iterable interface
+       function rewind()
+       {
+               return reset($this->_data);
+       }
+
+       function current()
+       {
+               return current($this->_data);
+       }
+
+       function key()
+       {
+               return key($this->_data);
+       }
+
+       function next()
+       {
+               return next($this->_data);
+       }
+
+       function valid()
+       {
+               return key($this->_data) !== null;
+       }
 }
 
 class AutoModeler_Exception extends Kohana_Exception
